// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Agero.GraphDatabaseDemo.Requirements.KeyExamples.SixDegrees
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SixDegreesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "SixDegrees_Actors.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Six Degrees", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Six Degrees")))
            {
                global::Agero.GraphDatabaseDemo.Requirements.KeyExamples.SixDegrees.SixDegreesFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table1.AddRow(new string[] {
                        "The Fellowship of the Ring"});
            table1.AddRow(new string[] {
                        "Elisabeth the Golden Age"});
            table1.AddRow(new string[] {
                        "Mamma Mia!"});
            table1.AddRow(new string[] {
                        "En hittepåfilm"});
            table1.AddRow(new string[] {
                        "En hittepåfilm, andra sommaren"});
#line 4
 testRunner.Given("the movies", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table2.AddRow(new string[] {
                        "Cate Blanchett"});
            table2.AddRow(new string[] {
                        "Liv Tyler"});
            table2.AddRow(new string[] {
                        "Rhys Ifans"});
            table2.AddRow(new string[] {
                        "Stellan Skarsgård"});
            table2.AddRow(new string[] {
                        "Julie Walters"});
            table2.AddRow(new string[] {
                        "Adam Godly"});
            table2.AddRow(new string[] {
                        "Jane Doe"});
#line 11
 testRunner.And("the persons", ((string)(null)), table2, "And ");
#line hidden
        }
        
        public virtual void TheSixDegreesIndexIsOneForActorsInTheSameMovie(string fromPerson, string toPerson, string sixDegreesIndex, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The six degrees index is one for actors in the same movie", exampleTags);
#line 21
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table3.AddRow(new string[] {
                        "Cate Blanchett"});
            table3.AddRow(new string[] {
                        "Liv Tyler"});
#line 22
 testRunner.When("the movie \'The Fellowship of the Ring\' has the actors", ((string)(null)), table3, "When ");
#line 27
 testRunner.Then(string.Format("the six degrees index from \'{0}\' to \'{1}\' is {2}", fromPerson, toPerson, sixDegreesIndex), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The six degrees index is one for actors in the same movie: Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "1")]
        public virtual void TheSixDegreesIndexIsOneForActorsInTheSameMovie_CateBlanchett()
        {
#line 21
this.TheSixDegreesIndexIsOneForActorsInTheSameMovie("Cate Blanchett", "Liv Tyler", "1", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The six degrees index is one for actors in the same movie: Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "1")]
        public virtual void TheSixDegreesIndexIsOneForActorsInTheSameMovie_LivTyler()
        {
#line 21
this.TheSixDegreesIndexIsOneForActorsInTheSameMovie("Liv Tyler", "Cate Blanchett", "1", ((string[])(null)));
#line hidden
        }
        
        public virtual void TheSixDegreesIndexIsTwoForActorsInDifferentMoviesWithACommonActor(string fromPerson, string toPerson, string sixDegreesIndex, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The six degrees index is two for actors in different movies with a common actor", exampleTags);
#line 34
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table4.AddRow(new string[] {
                        "Cate Blanchett"});
            table4.AddRow(new string[] {
                        "Liv Tyler"});
#line 35
 testRunner.When("the movie \'The Fellowship of the Ring\' has the actors", ((string)(null)), table4, "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table5.AddRow(new string[] {
                        "Cate Blanchett"});
            table5.AddRow(new string[] {
                        "Rhys Ifans"});
            table5.AddRow(new string[] {
                        "Adam Godly"});
#line 39
 testRunner.And("the movie \'Elisabeth the Golden Age\' has the actors", ((string)(null)), table5, "And ");
#line 45
 testRunner.Then(string.Format("the six degrees index from \'{0}\' to \'{1}\' is {2}", fromPerson, toPerson, sixDegreesIndex), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The six degrees index is two for actors in different movies with a common actor: " +
            "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Rhys Ifans")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "2")]
        public virtual void TheSixDegreesIndexIsTwoForActorsInDifferentMoviesWithACommonActor_LivTyler()
        {
#line 34
this.TheSixDegreesIndexIsTwoForActorsInDifferentMoviesWithACommonActor("Liv Tyler", "Rhys Ifans", "2", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The six degrees index is two for actors in different movies with a common actor: " +
            "Rhys Ifans")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Rhys Ifans")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Rhys Ifans")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "2")]
        public virtual void TheSixDegreesIndexIsTwoForActorsInDifferentMoviesWithACommonActor_RhysIfans()
        {
#line 34
this.TheSixDegreesIndexIsTwoForActorsInDifferentMoviesWithACommonActor("Rhys Ifans", "Liv Tyler", "2", ((string[])(null)));
#line hidden
        }
        
        public virtual void TheShortestPathIsUsedIfThereAreMoreThanOneConnection(string fromPerson, string toPerson, string sixDegreesIndex, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The shortest path is used if there are more than one connection", exampleTags);
#line 52
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table6.AddRow(new string[] {
                        "Cate Blanchett"});
            table6.AddRow(new string[] {
                        "Liv Tyler"});
#line 53
 testRunner.When("the movie \'The Fellowship of the Ring\' has the actors", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table7.AddRow(new string[] {
                        "Cate Blanchett"});
            table7.AddRow(new string[] {
                        "Rhys Ifans"});
            table7.AddRow(new string[] {
                        "Adam Godly"});
#line 57
 testRunner.And("the movie \'Elisabeth the Golden Age\' has the actors", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table8.AddRow(new string[] {
                        "Adam Godly"});
            table8.AddRow(new string[] {
                        "Jane Doe"});
#line 62
 testRunner.And("the movie \'En hittepåfilm\' has the actors", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table9.AddRow(new string[] {
                        "Jane Doe"});
            table9.AddRow(new string[] {
                        "Liv Tyler"});
#line 66
 testRunner.And("the movie \'En hittepåfilm, andra sommaren\' has the actors", ((string)(null)), table9, "And ");
#line 71
 testRunner.Then(string.Format("the six degrees index from \'{0}\' to \'{1}\' is {2}", fromPerson, toPerson, sixDegreesIndex), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The shortest path is used if there are more than one connection: Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "1")]
        public virtual void TheShortestPathIsUsedIfThereAreMoreThanOneConnection_CateBlanchett()
        {
#line 52
this.TheShortestPathIsUsedIfThereAreMoreThanOneConnection("Cate Blanchett", "Liv Tyler", "1", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The shortest path is used if there are more than one connection: Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "1")]
        public virtual void TheShortestPathIsUsedIfThereAreMoreThanOneConnection_LivTyler()
        {
#line 52
this.TheShortestPathIsUsedIfThereAreMoreThanOneConnection("Liv Tyler", "Cate Blanchett", "1", ((string[])(null)));
#line hidden
        }
        
        public virtual void TheSixDegreesIndexIsZeroForAnActorToHimOrHerself(string fromPerson, string toPerson, string sixDegreesIndex, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The six degrees index is zero for an actor to him or herself", exampleTags);
#line 78
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table10.AddRow(new string[] {
                        "Cate Blanchett"});
            table10.AddRow(new string[] {
                        "Liv Tyler"});
#line 79
 testRunner.When("the movie \'The Fellowship of the Ring\' has the actors", ((string)(null)), table10, "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table11.AddRow(new string[] {
                        "Cate Blanchett"});
            table11.AddRow(new string[] {
                        "Rhys Ifans"});
#line 83
 testRunner.And("the movie \'Elisabeth the Golden Age\' has the actors", ((string)(null)), table11, "And ");
#line 88
 testRunner.Then(string.Format("the six degrees index from \'{0}\' to \'{1}\' is {2}", fromPerson, toPerson, sixDegreesIndex), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The six degrees index is zero for an actor to him or herself: Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "0")]
        public virtual void TheSixDegreesIndexIsZeroForAnActorToHimOrHerself_CateBlanchett()
        {
#line 78
this.TheSixDegreesIndexIsZeroForAnActorToHimOrHerself("Cate Blanchett", "Cate Blanchett", "0", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The six degrees index is zero for an actor to him or herself: Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Liv Tyler")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "0")]
        public virtual void TheSixDegreesIndexIsZeroForAnActorToHimOrHerself_LivTyler()
        {
#line 78
this.TheSixDegreesIndexIsZeroForAnActorToHimOrHerself("Liv Tyler", "Liv Tyler", "0", ((string[])(null)));
#line hidden
        }
        
        public virtual void TheSixDegreesIndexIsMinusOneForActorsWithoutAConnection(string fromPerson, string toPerson, string sixDegreesIndex, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The six degrees index is minus one for actors without a connection", exampleTags);
#line 95
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table12.AddRow(new string[] {
                        "Cate Blanchett"});
            table12.AddRow(new string[] {
                        "Liv Tyler"});
#line 96
 testRunner.When("the movie \'The Fellowship of the Ring\' has the actors", ((string)(null)), table12, "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table13.AddRow(new string[] {
                        "Stellan Skarsgård"});
            table13.AddRow(new string[] {
                        "Julie Walters"});
#line 100
 testRunner.And("the movie \'Mamma Mia!\' has the actors", ((string)(null)), table13, "And ");
#line 105
 testRunner.Then(string.Format("the six degrees index from \'{0}\' to \'{1}\' is {2}", fromPerson, toPerson, sixDegreesIndex), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The six degrees index is minus one for actors without a connection: Cate Blanchet" +
            "t")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Stellan Skarsgård")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "-1")]
        public virtual void TheSixDegreesIndexIsMinusOneForActorsWithoutAConnection_CateBlanchett()
        {
#line 95
this.TheSixDegreesIndexIsMinusOneForActorsWithoutAConnection("Cate Blanchett", "Stellan Skarsgård", "-1", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
