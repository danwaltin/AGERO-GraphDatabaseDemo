// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Agero.GraphDatabaseDemo.Requirements.KeyExamples.SixDegrees
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SixDegreesActorsAndDirectorsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "SixDegrees_ActorsAndDirectors.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Six Degrees Actors and Directors", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Six Degrees Actors and Directors")))
            {
                global::Agero.GraphDatabaseDemo.Requirements.KeyExamples.SixDegrees.SixDegreesActorsAndDirectorsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title"});
            table1.AddRow(new string[] {
                        "The Fellowship of the Ring"});
            table1.AddRow(new string[] {
                        "King Kong"});
            table1.AddRow(new string[] {
                        "En hittepåfilm"});
            table1.AddRow(new string[] {
                        "En hittepåfilm, andra sommaren"});
#line 4
 testRunner.Given("the movies", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table2.AddRow(new string[] {
                        "Cate Blanchett"});
            table2.AddRow(new string[] {
                        "Peter Jackson"});
            table2.AddRow(new string[] {
                        "Jane Doe"});
            table2.AddRow(new string[] {
                        "Naomi Watts"});
#line 10
 testRunner.And("the persons", ((string)(null)), table2, "And ");
#line hidden
        }
        
        public virtual void TheSixDegreesIndexIsOneBetweenAnActorAndTheDirectorOfAMovie(string fromPerson, string toPerson, string sixDegreesIndex, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The six degrees index is one between an actor and the director of a movie", exampleTags);
#line 17
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 18
 testRunner.When("the movie \'The Fellowship of the Ring\' has the director \'Peter Jackson\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table3.AddRow(new string[] {
                        "Cate Blanchett"});
#line 19
 testRunner.And("the movie \'The Fellowship of the Ring\' has the actors", ((string)(null)), table3, "And ");
#line 23
 testRunner.Then(string.Format("the six degrees index from \'{0}\' to \'{1}\' is {2}", fromPerson, toPerson, sixDegreesIndex), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The six degrees index is one between an actor and the director of a movie: Cate B" +
            "lanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees Actors and Directors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Peter Jackson")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "1")]
        public virtual void TheSixDegreesIndexIsOneBetweenAnActorAndTheDirectorOfAMovie_CateBlanchett()
        {
#line 17
this.TheSixDegreesIndexIsOneBetweenAnActorAndTheDirectorOfAMovie("Cate Blanchett", "Peter Jackson", "1", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The six degrees index is one between an actor and the director of a movie: Peter " +
            "Jackson")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees Actors and Directors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Peter Jackson")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Peter Jackson")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "1")]
        public virtual void TheSixDegreesIndexIsOneBetweenAnActorAndTheDirectorOfAMovie_PeterJackson()
        {
#line 17
this.TheSixDegreesIndexIsOneBetweenAnActorAndTheDirectorOfAMovie("Peter Jackson", "Cate Blanchett", "1", ((string[])(null)));
#line hidden
        }
        
        public virtual void TheShortestPathIncludesDirectors(string fromPerson, string toPerson, string sixDegreesIndex, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The shortest path includes directors", exampleTags);
#line 30
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 31
 testRunner.When("the movie \'The Fellowship of the Ring\' has the director \'Peter Jackson\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table4.AddRow(new string[] {
                        "Cate Blanchett"});
#line 32
 testRunner.And("the movie \'The Fellowship of the Ring\' has the actors", ((string)(null)), table4, "And ");
#line 36
 testRunner.And("the movie \'King Kong\' has the director \'Peter Jackson\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table5.AddRow(new string[] {
                        "Naomi Watts"});
#line 37
 testRunner.And("the movie \'King Kong\' has the actors", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table6.AddRow(new string[] {
                        "Cate Blanchett"});
            table6.AddRow(new string[] {
                        "Jane Doe"});
#line 41
 testRunner.And("the movie \'En hittepåfilm\' has the actors", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table7.AddRow(new string[] {
                        "Jane Doe"});
            table7.AddRow(new string[] {
                        "Naomi Watts"});
#line 45
 testRunner.And("the movie \'En hittepåfilm, andra sommaren\' has the actors", ((string)(null)), table7, "And ");
#line 50
 testRunner.Then(string.Format("the six degrees index from \'{0}\' to \'{1}\' is {2}", fromPerson, toPerson, sixDegreesIndex), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The shortest path includes directors: Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees Actors and Directors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Naomi Watts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "2")]
        public virtual void TheShortestPathIncludesDirectors_CateBlanchett()
        {
#line 30
this.TheShortestPathIncludesDirectors("Cate Blanchett", "Naomi Watts", "2", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The shortest path includes directors: Naomi Watts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Six Degrees Actors and Directors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Naomi Watts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:from person", "Naomi Watts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:to person", "Cate Blanchett")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:six degrees index", "2")]
        public virtual void TheShortestPathIncludesDirectors_NaomiWatts()
        {
#line 30
this.TheShortestPathIncludesDirectors("Naomi Watts", "Cate Blanchett", "2", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
